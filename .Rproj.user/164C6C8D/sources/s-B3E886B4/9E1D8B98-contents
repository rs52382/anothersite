---
title: "Project 1: Exploratory Data Analysis"
author: "Raj Sharan - rs52382"
date: "10/20/2019"
output: html_document
---

```{r global_options, include=FALSE}
library(knitr)
opts_chunk$set(fig.align="center", fig.height=5, fig.width=8)
library(dplyr)
library(tidyr)
library(stringr)
library(fivethirtyeight)
library(ggplot2)
library(tibble)
```
---

### 0. Introduction

##### I have chosen two datasets provided by the FiveThirtyEight package. The first dataset labeled `bad_drivers` lists data from all 50 U.S. states and the District of Columbia. The dataset contains several numerical variables on the number of drivers per state involved in fatal collisions per billion miles (`num_drivers`), the percentage of drivers involved in fatal collisions who were speeding (`perc_speeding`), the percentage of drivers involved in fatal collisions who were alcohol-impaired (`perc_alcohol`), the percentage of drivers involved in fatal collisions who were not distracted (`perc_not_distracted`), the percentage of drivers involved in fatal collisions who had not been involved in any previous accidents (`perc_no_previous`), car insurance premiums in U.S. dollars (`insurance_premiums`), and losses incurred by insurance companies for collisions per insured driver in U.S. dollars (`losses`). 

##### The second dataset labeled `state_info` lists all 50 U.S. states and the District of Colombia in addition to their abbreviation, division, and region. I was able to aquire these datasets by installing the `fivethirtyeight` package and pulling the datasets I needed. I was inspired to choose these datasets when I was in a car accident earlier this month. Although my accident was much less severe, I wanted to see if there were any correlations between fatal collisions and the regions or divisions of the U.S..

---

### 1. Tidying: Rearranging Wide/Long

##### My datasets were already tidy, so I untidied them by using `pivot_wider` on each dataset and then reshaped them with `pivot_longer` to retidy them. I made sure to ue `values_drop_na=T` in when retidying each dataset so as to remove any NAs from the datasets.

```{R, echo=FALSE}
state_info <- state_info
bad_drivers <- bad_drivers

state_info <- state_info %>%
  pivot_wider(names_from = "region", values_from = "division") %>%
  glimpse()

state_info <- state_info %>%
  pivot_longer(c("South","West","Northeast","Midwest"),names_to = "region",values_to = "division", values_drop_na=T ) %>%
  glimpse()

bad_drivers <- bad_drivers %>%
  pivot_wider(names_from = "state", values_from = "num_drivers")

bad_drivers <- bad_drivers %>%
  pivot_longer(7:57, names_to = "state",values_to = "num_drivers", values_drop_na = T) %>%
  glimpse()
```

---

### 2. Joining/Merging

##### I joined my two datasets by using `left_join` to join the `bad_drivers` dataset to the `state_info` dataset. I chose `left_join` instead of another join function so as to keep the state, state abbreviation, division, and region variables on the left side of the dataset and keep the dataset looking clean. No cases were dropped since the datasets were joined by `state` and all 51 locations were in each dataset.

```{R, echo=FALSE}
joined_drive <- left_join(state_info, bad_drivers, by="state") %>%
  glimpse()
```

---

### 3. Wrangling

##### The mean values for all numeric variables are as follows: 15.7902	people for `num_drivers`, 31.72549% for `perc_speeding`, 30.68627% for `perc_alcohol`, 85.92157% for `perc_not_distracted`, 88.72549% for `perc_no_previous`, $886.9576 for `insurance_premiums`, and $134.4931 for `losses`. 
##### The standard deviation values for all numeric variables are as follows: 4.122002 people for `num_drivers`, 9.633438% for `perc_speeding`, 5.132213% for `perc_alcohol`, 15.15895% for `perc_not_distracted`, 6.96011% for `perc_no_previous`, $178.2963 for `insurance_premiums`, and $24.83592 for `losses`. 
##### The variance values for all numeric variables are as follows: 16.9909 for `num_drivers`, 92.80314 for `perc_speeding`, 26.33961 for `perc_alcohol`, 229.7937 for `perc_not_distracted`, 48.44314 for `perc_no_previous`, 31789.57 for `insurance_premiums`, and 616.823 for `losses`. 
##### The minimum values for all numeric variables are as follows: 5.9 people for `num_drivers`, 13% for `perc_speeding`, 16% for `perc_alcohol`, 10% for `perc_not_distracted`, 76% for `perc_no_previous`, $641.96 for `insurance_premiums`, and $82.75 for `losses`. 
##### The maximum values for all numeric variables are as follows: 23.9 people for `num_drivers`, 54% for `perc_speeding`, 44% for `perc_alcohol`, 100% for `perc_not_distracted`, 100% for `perc_no_previous`, $1301.52 for `insurance_premiums`, and $194.78 for `losses`. 
##### The number of distinct values for all numeric variables are as follows: 45 for `num_drivers`, 29 for `perc_speeding`, 19 for `perc_alcohol`, 26 for `perc_not_distracted`, 22 for `perc_no_previous`, 51 for `insurance_premiums`, and 51 for `losses`. 

##### The correlation matrix created for all numeric variables shows the strongest correlation at 0.286 for the percentage of drivers involved in fatal collisions who were speeding (`perc_speeding`) and the percentage of drivers involved in fatal collisions who were alcohol-impaired (`perc_alcohol`). Out of all 4 regions of the U.S., the South has the largest mean and standard deviation for the number of drivers per state involved in fatal collisions per billion miles. Out of the 3 divisions located in the South, the West South Central division has the largest mean for the number of drivers per state involved in fatal collisions per billion miles. South Carolina ranks the highest in the 99th percentile for the number of drivers per state involved in fatal collisions per billion miles, while the District of Columbia ranks the lowest in the 1st percentile.

```{R, echo=FALSE}
joined_drive %>%
  summarize_if(is.numeric, mean, na.rm=T)
joined_drive %>%
  summarize_if(is.numeric, sd, na.rm=T)
joined_drive %>%
  summarize_if(is.numeric, var, na.rm=T)
joined_drive %>%
  summarize_if(is.numeric, min, na.rm=T)
joined_drive %>%
  summarize_if(is.numeric, max, na.rm=T)
joined_drive %>%
  summarize_all(n_distinct)
joined_drive %>%
  select_if(is.numeric) %>% 
  na.omit %>% 
  cor
joined_drive %>%
  group_by(region) %>%
  summarize_if(is.numeric, mean, na.rm=T)
joined_drive %>%
  group_by(region) %>%
  summarize_if(is.numeric, sd, na.rm=T)
joined_drive %>%
  filter(region=="South") %>%
  group_by(division) %>%
  summarize_if(is.numeric, mean, na.rm=T)
joined_drive %>%
  mutate(num_drivers_pct = ntile(num_drivers,100)) %>%
  arrange(desc(num_drivers_pct)) %>%
  select(state,num_drivers_pct)
```

---

### 4. Visualizing

```{R, echo=FALSE}
joined_drive %>%
  ggplot(aes(x = perc_speeding, y = perc_alcohol, color = region)) +
  geom_point(size=3) +
  theme_minimal() +
  ggtitle("Speeding Fatality and Alcohol-Imparied Fatality Percentages by Region") + 
  ylab("Speeding Drivers in Fatal Collisions (%)") + 
  xlab("Alcohol-Imparied Drivers in Fatal Collisions (%)")
```

##### For the first plot, a scatterplot was made in order to compare the two highest correlated variables by `region`: `perc_speeding` and `perc_alcohol`. According to the scatterplot, it can be said that the Western region of the U.S. has more of a positive relationship between the percentage of drivers involved in fatal collisions who were speeding and the percentage of drivers involved in fatal collisions who were alcohol-impaired than the other regions. The Midwestern and Northeastern regions seem to have no relationship at all between the two variables, and the South can be seen to have a slightly positive relationship between the two variables.

```{R, echo=FALSE}
joined_drive %>%
  ggplot(aes(x = region, fill = division)) +
  geom_bar(aes(y = num_drivers), stat="summary", fun.y="mean") +
  ggtitle("Number of Fatal Collisons per Billion Miles by Division") + 
  ylab("Average Number of Fatal Collisions (%)") + 
  xlab("Region")
```

##### The second plot consists of a stacked bar chart, displaying the average number of drivers per state involved in fatal collisions per billion miles (`num_drivers`) organized by `region` and `division` within each region. It is clear that the Southern region of the U.S. has more drivers involved in fatal collisions per billion miles, but it also consists of 3 divisions rather than 2 like the other regions, possibly generating more data for the South. It can be said that the East South Central and West South Central divisions each compensate for more drivers involved in fatal collisions per billion miles than any other division across the U.S..

---

### 5. Dimensionality Reduction

```{R, echo=FALSE}
joined_drive %>%
  select_if(is.numeric) %>%
  scale %>%
  cov %>%
  round(2)

drive_nums <- joined_drive %>%
  select_if(is.numeric) %>%
  scale
drive_pca <- princomp(drive_nums)
names(drive_pca)
summary(drive_pca, loadings=T)

eigval <- drive_pca$sdev^2
varprop = round(eigval/sum(eigval),2)
ggplot() +
  geom_bar(aes(y=varprop,x=1:7),stat="identity") +
  xlab("")+geom_path(aes(y=varprop,x=1:7)) +
  geom_text(aes(x=1:7,y=varprop,label=round(varprop,2)),vjust=1,col="white",size=5) +
  scale_y_continuous(labels = scales::percent) +
  scale_x_continuous(breaks=1:10)
```

##### The data was first prepared by grabbing all relevant numerical data and scaling it. Next, I ran `princomp()` on the scaled data and chose 2 principle components to use after creating a plot to visualize my eigenvalues. I then used these components to find the PC scores for each component and visualize them through a plot of loadings.

```{R, echo=FALSE}
drive_pca$loadings[1:7,1:2] %>%
  as.data.frame %>% 
  rownames_to_column %>%
  ggplot() + geom_hline(aes(yintercept=0),lty=2) +
  geom_vline(aes(xintercept=0),lty=2) + 
  ylab("PC2")+xlab("PC1") +
  geom_segment(aes(x=0,y=0,xend=Comp.1,yend=Comp.2),arrow=arrow(),col="red") +
  geom_label(aes(x=Comp.1*1.1,y=Comp.2*1.1,label=rowname)) +
  ggtitle("PCA Loadings Plot")
```

##### The loading plot shows that `insurance_premiums` and `losses` affect PC1 greatly, while `perc_speeding`, `perc_alcohol`, and `perc_not_distracted` affected PC2 the most. `num_drivers` negatively affected PC1 and didn't have much of an effect on PC2. Lastly, `perc_no_previous` had a slight effect on PC1 and a negative effect on PC2.

---
